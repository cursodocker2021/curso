>>>>>>>>>>>>>>>> Exercícios e desafios de Docker compose

Exercício 1:
Efetue a instalação do Docker compose e execute o primeiro compose descrito neste post: https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-compose-on-ubuntu-20-04-pt
Aproveite para ler o conteúdo entre as seções (todo o tutorial), isso trará a base para a utilização do Docker compose.

Exercício 2: https://docs.docker.com/samples/wordpress/

Exercício 3: https://docs.docker.com/samples/rails/

Exercício 4: https://docs.docker.com/samples/django/

Exercício 5: https://grafana.com/grafana/dashboards/893

Exercício 6:
Conheça/suba outra opção de interface gráfica (Bem menos gráfica que o Portainer =): https://github.com/jesseduffield/lazydocker#docker

Exercício 7: https://bidhankhatri.com.np/system/docker-compose-file-for-mysql-and-phpmyadmin/

Exercício 8: https://github.com/hellokoding/dockercompose-springboot-mysql-nginx
Dica: Use o GIT como no exerício 7

Exercício 9: https://github.com/hellokoding/dockercompose-springboot-mongodb-nginx
Dica: Use o GIT como no exerício 7

Desafio 1: https://github.com/docker/awesome-compose#samples-of-docker-compose-applications-with-multiple-integrated-services
Escolha 3 ou mais labs da seção "Samples of Docker Compose applications with multiple integrated services" para executar, continue usando o GIT como nos exercícios anteriores

Desafio 2: 
Load balancer: https://doc.traefik.io/traefik/getting-started/quick-start/
Proxy reverso: https://medium.com/predictly-on-tech/using-traefik-in-docker-compose-abc1c327d7f7
ATENÇÃO: Leia com atenção os artigos e vá executando os labs propostos, estes conceitos são muito importantes!

>>>>>>>>>>>>>>>> Exercício de Docker machine

Exercício 10:
Instale o Docker machine no seu host
Crie uma máquina com Docker machine chamada "mysqlsrv"
Entre via SSH nesta VM
Crie o diretório de dados do MySQL: sudo mkdir -p /docker/mysql/wordpress/data
Suba um container desta forma nela:
docker run -d --name mysql-wordpress \
-p 3306:3306 \
-v /docker/mysql/wordpress/data:/var/lib/mysql \
-e MYSQL_ROOT_PASSWORD=secret \
-e MYSQL_DATABASE=wordpress \
-e MYSQL_USER=wordpress \
-e MYSQL_PASSWORD=wordpress \
mysql:5.7
Saia da VM

Exercício 11:
Crie uma máquina com Docker machine chamada "wordpress"
Pegue o IP da VM "mysqlsrv"
Entre via SSH nesta VM via docker-machine
Suba um container desta forma nela (AJUSTE O IP PARA O IP DA VM DE BANCO DE DADOS):
docker run -d --name wordpress \
 -p 80:80 \
 -e WORDPRESS_DB_HOST="IP_MYSQLSRV" \
 -e WORDPRESS_DB_USER="wordpress" \
 -e WORDPRESS_DB_PASSWORD="wordpress" \
 -e WORDPRESS_DB_NAME="wordpress" \
 wordpress
Entre no Wordpress e finalize a configuração
Apague as duas VMs

>>>>>>>>>>>>>>>> Exercício de Docker Swarm + Docker Stack

Exercício 12:
Crie três VMs com Docker Machine usando o driver "hyperv" com o nome dw1, dw2 e dw3
Entre na máquina dw1 e inicie o swarm: docker swarm init --advertise-addr [ip]
Copie o comando+token que será gerado na máquina dw1
Entre nas máquinas 2 e 3 e insira o comando+token para inseri-las no cluster
Volte para a vm manager (dw1) e liste os nodes
Agora implemente o seguinte sistema (Swarm): https://github.com/docker/example-voting-app
Agora efetue os seguintes comandos e visualize os dados com atenção:
docker stack ls
docker stack services vote
docker service ls
docker service ps <nome_dos_servicos_do_comando_anterior>
Entre na aplicação pelo navegador, o IP usado será de um dos managers para acesso, já que eles efetuam o papel de load-balancer.

Exercício 13:
Implemente o Portainer para auxiliar no uso do Swarm: https://documentation.portainer.io/v2.0/deploy/ceinstallswarm/
Entre no sistema e explore os recursos relacionados ao cluster e demais que antes não estavam disponíveis quando utilizamos da primeira vez

Exercício 14: https://bday2021.play-with-docker.com/voting-app/

Exercício 15: 
Execute e leia atentamente o exercício: https://doc.traefik.io/traefik/v1.7/user-guide/swarm-mode/

Exercício 16:
Execute toda a trilha de exercícios lendo com atenção as explicações para consolidar o conhecimento: https://www.katacoda.com/courses/docker-orchestration

Desafio 3 (Opcional/avançado): https://dockerswarm.rocks/

Exercício 17:
Crie um registry local, a imagem e efetue o deploy do serviço
https://docs.docker.com/engine/swarm/stack-deploy/

Desafio 4:
Crie uma nova VM com o Docker Machine, chamada "dw4" e ingresse ela no cluster
Entre no manager e mude para o modo root
Execute o comando "docker node update --help" e aprenda a configurar o modo drain no node "dw3", para que ele não execute containers
Edite o arquivo hosts do seu Windows e crie uma entrada para a url wordpressdemo.net que aponte para o IP do "dw1", você utilizará esta URL no lab
Execute: git clone https://github.com/iiriix/docker-swarm-wordpress
Visualize o arquivo "docker-stack.yml" para confirmar se existe a configuração para que os serviços reiniciem em caso de problemas
Você precisa obrigar que o serviço "mysql" rode no node "dw4" após ser criado
 > O primeiro passo para direcionar o deploy para este nó, é criar um label para ele, os labels são muito usados para identificar ambientes, tanto no Swarm quanto no Kubernetes por exemplo
   > Para criar o label, no manager execute o comando "docker node update --label-add dc=db dw3"
 > Agora edite o "docker-stack.yml" e adicione a seção de placement (alocação do serviço) no serviço mysql:
   placement:
     constraints:
       - node.labels.dc == db
Antes de executar o deploy, execute o mkdir proposto nos demais nós, já que não temos um share montado em todos os nós, lembrando que isso pode ser feito com o NFS por exemplo, ai neste caso você pode usar o ponto de montagem na configuração do yml na parte de volumes
Agora execute os demais comandos até o final
Valide os serviços com o comando ps do Docker Stack
Entre no navegador com a url wordpressdemo.net e finalize a configuração do Wordpress
Exclua a stack

Exercício 18:
Obrigatório ler, opcional fazer (Precisa de conta na AWS): https://hackernoon.com/architecting-a-highly-available-and-scalable-wordpress-using-docker-swarm-traefik-glusterfs-a69186e9f0e

>>>>>>>>>>>>>>>> Exercício relacionados a segurança

Exercício 19:
Execute o seguinte script na opção de Docker: https://github.com/docker/docker-bench-security
Instale o WinSCP no Windows e transfira o log gerado após a execução, que consta na página do script

Exercício 20:
Execute a seguinte aplicação na opção "machine scanner demo": https://hub.docker.com/r/openscap/openscap
Use o WinSCP para baixar o relatório para o Windows, abra e analize com algun navegador

Desafio 5 (opcional): https://code-maze.com/ci-jenkins-docker/

